jobs:
- name: create-pipelines
  public: true
  serial: true
  plan:
  - aggregate:
    - { get: skills, trigger: true }
    - { get: skills-api, trigger: true }
  - put: skills-pipelines
    params:
      pipelines:
      - name: skills-api
        team: main
        config_file: skills-api/ci/pipeline.yml
        vars_files:
        - skills/ci/settings.yml
        - skills-api/ci/settings.yml
        - skills/secrets/credentials.yml
- name: test
  public: true
  serial: true
  plan:
  - get: repo
    resource: merge-requests
    trigger: true
  - put: merge-requests
    params:
      repository: skills
      status: running
  - task: run-tests
    file: repo/ci/tasks/run-tests.yml
  on_failure:
    put: merge-requests
    params:
      repository: skills
      status: failed
  on_success:
    put: merge-requests
    params:
      repository: skills
      status: success

resources:
- name: skills
  type: git
  source:
    uri: {{repo}}
    branch: master
    private_key: {{gitlab-private-key}}
- name: skills-api
  type: git
  source:
    uri: {{skills-api-repo}}
    branch: master
    private_key: {{gitlab-private-key}}
- name: skills-pipelines
  type: concourse-pipeline
  source:
    target: {{concourse-url}}
    insecure: "false"
    teams:
    - name: main
      username: {{concourse-username}}
      password: {{concourse-password}}
- name: merge-requests
  type: merge-request
  source:
    uri: {{repo}}
    private_key: {{gitlab-private-key}}
    private_token: {{gitlab-private-token}}


resource_types:
- name: helm
  type: docker-image
  source:
    repository: linkyard/concourse-helm-resource
- name: merge-request
  type: docker-image
  source:
    repository: jakedsouza/gitlab-merge-request-resource
- name: concourse-pipeline
  type: docker-image
  source:
    repository: concourse/concourse-pipeline-resource
